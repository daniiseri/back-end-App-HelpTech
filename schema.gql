# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Alternative {
  description: String!
  id: ID!
  idCategory: Int!
  idQuest: Int!
  level: Int!
}

type Category {
  description: String!
  id: ID!
}

type ContextType {
  error: Boolean!
  token: String
  user: User
}

type Hardware {
  capacity: Float!
  id: ID!
  model: String!
  price: Float!
  type: Type!
}

type MergeCategory {
  id: ID!
  idCategoryOne: Int!
  idCategoryTwo: Int!
}

type Mutation {
  createAlternative(idCategory: Float!, idQuests: Float!, newAlternativeData: NewAlternativeInput!): [Alternative!]!
  createCategory(newCategoryInput: NewCategoryInput!): [Category!]!
  createHardware(newHardwareInput: NewHardwareInput!): Hardware!
  createMergeCategory: MergeCategory!
  createQuest(idCategory: Float!, newQuestData: NewQuestInput!): [Quest!]!
  createType(newTypeInput: NewTypeInput!): Type!
  createUser(newUserInput: NewUserInput!): [User!]!
  createUserResponse(newUserResolverInput: NewUserResponseInput!): [UserResponse!]!
  login(email: String!, password: String!): ContextType!
}

input NewAlternativeInput {
  description: String!
  level: Int!
}

input NewCategoryInput {
  description: String!
}

input NewHardwareInput {
  capacity: Float!
  idType: Float!
  model: String!
  price: Float!
}

input NewQuestInput {
  description: String!
}

input NewTypeInput {
  description: String!
}

input NewUserInput {
  email: String!
  name: ID!
  password: String!
}

input NewUserResponseInput {
  idAlternative: Int!
  idUser: Int!
}

type Query {
  alternatives: [Alternative!]!
  categories: [Category!]!
  hardwares: [Hardware!]!
  mergeCategories: [MergeCategory!]!
  quests: [Quest!]!
  type: [Type!]!
  types: [Type!]!
  userReponses: [UserResponse!]!
  users: [User!]!
}

type Quest {
  description: String!
  id: ID!
  idCategory: Int!
}

type Type {
  description: String!
  id: ID!
}

type User {
  email: String!
  id: ID!
  name: String!
  password: String!
}

type UserResponse {
  id: ID!
  idAlternative: Float!
  idUser: Float!
}
